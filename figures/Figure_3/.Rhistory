setwd('~/Desktop/2019_HMBR/Automata/macarron_manuscript_git_repo/macarron_manuscript/figures/Figure_3/')
CD_stats <- read.csv("../../output/all_CD_priority_scores.csv")
UC_stats <- read.csv("../../output/all_UC_priority_scores.csv")
chem_tax <- read.csv("../../input/hmdb_taxonomy.csv")
annotated_modules <- unique(CD_stats[CD_stats$Covaries_with_standard == 1,"Module"])
modules <- as.data.frame(table(CD_stats$Module)) %>%
rename(module = 1, size = 2) %>%
mutate(module = as.numeric(as.character(module))) %>%
filter(module > 0) %>%
mutate(type = ifelse(module %in% annotated_modules, "annotated", "unannotated"))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(data.table)
library(tidyverse)
library(cowplot)
CD_stats <- read.csv("../../output/all_CD_priority_scores.csv")
UC_stats <- read.csv("../../output/all_UC_priority_scores.csv")
chem_tax <- read.csv("../../input/hmdb_taxonomy.csv")
annotated_modules <- unique(CD_stats[CD_stats$Covaries_with_standard == 1,"Module"])
modules <- as.data.frame(table(CD_stats$Module)) %>%
rename(module = 1, size = 2) %>%
mutate(module = as.numeric(as.character(module))) %>%
filter(module > 0) %>%
mutate(type = ifelse(module %in% annotated_modules, "annotated", "unannotated"))
# perturbed metabolome percentage
length(union(rownames(CD_stats[which(CD_stats$qval < 0.05),]), rownames(UC_stats[which(UC_stats$qval < 0.05),])))
# modules containing IBD enriched features
annotated_modules_df <- modules[modules$module %in% annotated_modules,]
annotated_modules_df$CD_enr <- vapply(annotated_modules_df$module, function(x)
length(CD_stats[CD_stats$Module ==x & CD_stats$Status == "enriched in CD.dys" & CD_stats$qvalue < 0.05,1]), numeric(1))
annotated_modules_df$UC_enr <- vapply(annotated_modules_df$module, function(x)
length(UC_stats[UC_stats$Module ==x & UC_stats$Status == "enriched in UC" & UC_stats$qvalue < 0.05,1]), numeric(1))
# modules containing IBD depleted features
annotated_modules_df$CD_dep <- vapply(annotated_modules_df$module, function(x)
length(CD_stats[CD_stats$Module ==x & CD_stats$Status == "depleted in CD.dys" & CD_stats$qvalue < 0.05,1]), numeric(1))
annotated_modules_df$UC_dep <- vapply(annotated_modules_df$module, function(x)
length(UC_stats[UC_stats$Module ==x & UC_stats$Status == "depleted in UC" & UC_stats$qvalue < 0.05,1]), numeric(1))
#fractions that are perturbed
annotated_modules_df <- annotated_modules_df %>%
mutate(CD_enr_frac = CD_enr/size,
UC_enr_frac = UC_enr/size,
CD_dep_frac = CD_dep/size,
UC_dep_frac = UC_dep/size)
# modules that contain 25% of each category
CD_enr_modules <- annotated_modules_df[annotated_modules_df$CD_enr_frac >= 0.25,"module"]
CD_dep_modules <- annotated_modules_df[annotated_modules_df$CD_dep_frac >= 0.25,"module"]
UC_enr_modules <- annotated_modules_df[annotated_modules_df$UC_enr_frac >= 0.25,"module"]
UC_dep_modules <- annotated_modules_df[annotated_modules_df$UC_dep_frac >= 0.25,"module"]
CD_enr_tax_df <- CD_stats[CD_stats$Module %in% CD_enr_modules, c("Module","HMDB.ID")] %>%
rename(module=1, hmdb=2) %>%
filter(!grepl("\\*", hmdb)) %>%
filter(hmdb %like% "HMDB") %>%
mutate(subclass = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Subclass"], character(1))) %>%
mutate(class = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Class"], character(1))) %>%
mutate(taxonomy = ifelse(subclass == "", paste0(class,"*"), subclass)) %>%
group_by(module, taxonomy) %>%
summarise(count = n()) %>%
mutate(type = "CD-dys enriched") %>%
arrange(desc(count),taxonomy) %>%
mutate(module = factor(module, levels=unique(module))) %>%
mutate(taxonomy = factor(taxonomy, levels=unique(taxonomy)))
View(chem_tax)
CD_enr_tax_df <- CD_stats[CD_stats$Module %in% CD_enr_modules, c("Module","HMDB.ID")] %>%
rename(module=1, hmdb=2) %>%
filter(!grepl("\\*", hmdb)) %>%
filter(hmdb %like% "HMDB") %>%
mutate(subclass = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Sub_Class"], character(1))) %>%
mutate(class = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Class"], character(1))) %>%
mutate(taxonomy = ifelse(subclass == "", paste0(class,"*"), subclass)) %>%
group_by(module, taxonomy) %>%
summarise(count = n()) %>%
mutate(type = "CD-dys enriched") %>%
arrange(desc(count),taxonomy) %>%
mutate(module = factor(module, levels=unique(module))) %>%
mutate(taxonomy = factor(taxonomy, levels=unique(taxonomy)))
CD_dep_tax_df <- CD_stats[CD_stats$Module %in% CD_dep_modules, c("Module","HMDB.ID")] %>%
rename(module=1, hmdb=2) %>%
filter(!grepl("\\*", hmdb)) %>%
filter(hmdb %like% "HMDB") %>%
mutate(subclass = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Sub_Class"], character(1))) %>%
mutate(class = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Class"], character(1))) %>%
mutate(taxonomy = ifelse(subclass == "", paste0(class,"*"), subclass)) %>%
group_by(module, taxonomy) %>%
summarise(count = n()) %>%
mutate(type = "CD-dys depleted") %>%
arrange(desc(count),taxonomy) %>%
mutate(module = factor(module, levels=unique(module))) %>%
mutate(taxonomy = ifelse(module == 217, "Alkaloids and derivatives",taxonomy)) %>%
mutate(taxonomy = factor(taxonomy, levels=unique(taxonomy)))
UC_enr_tax_df <- CD_stats[CD_stats$Module %in% UC_enr_modules, c("Module","HMDB.ID")] %>%
rename(module=1, hmdb=2) %>%
filter(!grepl("\\*", hmdb)) %>%
filter(hmdb %like% "HMDB") %>%
mutate(subclass = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Sub_Class"], character(1))) %>%
mutate(class = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Class"], character(1))) %>%
mutate(taxonomy = ifelse(subclass == "", paste0(class,"*"), subclass)) %>%
group_by(module, taxonomy) %>%
summarise(count = n()) %>%
mutate(type = "UC enriched") %>%
arrange(desc(count),taxonomy) %>%
mutate(module = factor(module, levels=unique(module))) %>%
mutate(taxonomy = factor(taxonomy, levels=unique(taxonomy)))
UC_dep_tax_df <- CD_stats[CD_stats$Module %in% UC_dep_modules, c("Module","HMDB.ID")] %>%
rename(module=1, hmdb=2) %>%
filter(!grepl("\\*", hmdb)) %>%
filter(hmdb %like% "HMDB") %>%
mutate(subclass = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Sub_Class"], character(1))) %>%
mutate(class = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Class"], character(1))) %>%
mutate(taxonomy = ifelse(subclass == "", paste0(class,"*"), subclass)) %>%
group_by(module, taxonomy) %>%
summarise(count = n()) %>%
mutate(type = "UC depleted") %>%
arrange(desc(count),taxonomy) %>%
mutate(module = factor(module, levels=unique(module))) %>%
mutate(taxonomy = factor(taxonomy, levels=unique(taxonomy)))
fig3A_tax_df <- as.data.frame(rbind(CD_enr_tax_df, UC_enr_tax_df, CD_dep_tax_df, UC_dep_tax_df))
fig3A_tax_df$type <- factor(fig3A_tax_df$type, levels=unique(fig3A_tax_df$type))
#plot heatmap
fig3A_heatmap <- ggplot(fig3A_tax_df, aes(x=module, y=taxonomy, fill=count)) +
geom_tile(aes(fill=count), color="black", lwd=0.22) +
scale_fill_viridis(option="A",direction=-1) +
theme_bw() +
facet_grid(cols=vars(type),space="free", scales="free") +
theme( strip.background = element_blank(), strip.text.x = element_blank())+
theme(axis.text.x = element_text(angle=90, size=8.5, hjust=0.95),
axis.text.y = element_text(size=8.5), axis.title = element_text(size=10),
legend.background = element_rect(colour = "black", size=0.22),
legend.position = c(0.08,0.85), plot.margin = unit(c(0, 0.1, 0.5, 0.25), "cm")) +
xlab("IBD-relevant modules") + ylab("Chemical subclass or class*")
CD_enr_tax_df <- CD_stats[CD_stats$Module %in% CD_enr_modules, c("Module","HMDB.ID")] %>%
rename(module=1, hmdb=2) %>%
filter(!grepl("\\*", hmdb)) %>%
filter(hmdb %like% "HMDB") %>%
mutate(subclass = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Sub_Class"], character(1))) %>%
mutate(class = vapply(hmdb, function(x) chem_tax[chem_tax$HMDB.ID == x, "Class"], character(1))) %>%
mutate(taxonomy = ifelse(subclass == "", paste0(class,"*"), subclass)) %>%
group_by(module, taxonomy) %>%
tally() %>%
mutate(type = "CD-dys enriched") %>%
arrange(desc(n),taxonomy) %>%
mutate(module = factor(module, levels=unique(module))) %>%
mutate(taxonomy = factor(taxonomy, levels=unique(taxonomy)))
