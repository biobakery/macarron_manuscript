knitr::opts_chunk$set(echo = TRUE)
library(readxl)
setwd("~/Desktop/2019_HMBR/Automata/macarron_manuscript_git_repo/macarron_manuscript/figures/Figure_1/")
met_types <- read_excel("data/Dataset_EV1.xlsx", sheet = 1) |> as.data.frame()
View(met_types)
hmp2_abun <- read.csv("../../input/hmp2_intensities.csv")
transform_col <- function(col){
mets <- met_types$`Annotation type`
mets[which(is.na(col))] <- NA
mets
}
met_df <- apply(hmp2_abun, 2, transform_col)
View(met_df)
met_df <- apply(hmp2_abun, 2, transform_col) |> as.data.frame()
feat_dist_by_sample <- apply(met_df, 2, table)
View(feat_dist_by_sample)
feat_dist_by_sample <- rbind(feat_dist_by_sample, apply(feat_dist_by_sample, 2, sum))
feat_dist_by_sample <- apply(met_df, 2, table)
library(ggplot2)
library(data.table)
library(tidyverse)
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
add_row(cvar = "total", apply(feat_dist_by_sample, 2, sum))
View(feat_dist_by_sample)
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
add_row(cvar = "total", apply(., 2, sum))
feat_dist_by_sample <- rbind(feat_dist_by_sample, total) %>%
as.data.frame() %>%
pivot_longer()
total <- apply(feat_dist_by_sample, 2, sum)
feat_dist_by_sample <- rbind(feat_dist_by_sample, total) %>%
as.data.frame() %>%
pivot_longer()
feat_dist_by_sample <- rbind(feat_dist_by_sample, total) %>%
as.data.frame() %>%
rownames_to_column()
View(feat_dist_by_sample)
feat_dist_by_sample <- apply(met_df, 2, table) |> as.data.frame()
total <- apply(feat_dist_by_sample, 2, sum)
feat_dist_by_sample <- rbind(feat_dist_by_sample, total) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1)
View(feat_dist_by_sample)
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
group_by(name) %>%
mutate(total = sum(value))
View(feat_dist_by_sample)
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
group_by(name) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total)
hmp2_meta <- read.csv("../../input/hmp2_metadata.csv", row.names = 1)
View(hmp2_meta)
View(hmp2_meta)
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
group_by(name) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total) %>%
mutate(diagnosis = hmp2_meta[name, "diagnosis"])
met_df <- apply(hmp2_abun, 2, transform_col) |> as.data.frame()
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
rename(type = 1, sample = 2)
group_by(sample) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total) %>%
mutate(diagnosis = hmp2_meta[sample, "diagnosis"]) %>%
mutate(colfacet = case_when(
diagnosis == "Control" ~ "non-IBD (n = 135)",
diagnosis == "CD" ~ "CD (n = 265)",
diagnosis == "UC" ~ "UC (n = 146)")) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown"))) %>%
mutate(phenotype = factor(phenotype, levels = c("non-IBD (n = 135)","CD (n = 265)","UC (n = 146)")))
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
rename("type" = 1, "sample" = 2)
group_by(sample) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total) %>%
mutate(diagnosis = hmp2_meta[sample, "diagnosis"]) %>%
mutate(colfacet = case_when(
diagnosis == "Control" ~ "non-IBD (n = 135)",
diagnosis == "CD" ~ "CD (n = 265)",
diagnosis == "UC" ~ "UC (n = 146)")) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown"))) %>%
mutate(phenotype = factor(phenotype, levels = c("non-IBD (n = 135)","CD (n = 265)","UC (n = 146)")))
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
rename("type" = 1, "sample" = 2) %>%
group_by(sample) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total) %>%
mutate(diagnosis = hmp2_meta[sample, "diagnosis"]) %>%
mutate(colfacet = case_when(
diagnosis == "Control" ~ "non-IBD (n = 135)",
diagnosis == "CD" ~ "CD (n = 265)",
diagnosis == "UC" ~ "UC (n = 146)")) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown"))) %>%
mutate(phenotype = factor(phenotype, levels = c("non-IBD (n = 135)","CD (n = 265)","UC (n = 146)")))
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
rename("type" = 1, "sample" = 2) %>%
group_by(sample) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total) %>%
mutate(diagnosis = hmp2_meta[sample, "diagnosis"]) %>%
mutate(colfacet = case_when(
diagnosis == "Control" ~ "non-IBD (n = 135)",
diagnosis == "CD" ~ "CD (n = 265)",
diagnosis == "UC" ~ "UC (n = 146)")) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown"))) %>%
mutate(colfacet = factor(colfacet, levels = c("non-IBD (n = 135)","CD (n = 265)","UC (n = 146)")))
fig1A <- ggplot(feat_dist_by_sample, aes(x=sample, y=value, fill=type)) +
geom_bar(stat="identity", width = 1)+scale_fill_manual(values=c("firebrick1","lightsteelblue1","grey50")) +
xlab("Samples")+ ylab("Features") +
facet_grid(cols=vars(colfacet), space="free", scales="free")  + theme_bw() +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank(), legend.position="bottom",
axis.title.x = element_text(size=10), axis.title.y = element_text(size=10),
axis.text.y = element_text(size=8), strip.text.x = element_text(size = 10),
panel.background = element_rect(fill="white")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) + guides(fill=guide_legend(nrow=1)) + labs(fill="Feature category")
addSmallLegend <- function(myPlot, pointSize = 1, textSize = 9, spaceLegend = 0.5) {
myPlot +
guides(shape = guide_legend(override.aes = list(size = pointSize)),
color = guide_legend(override.aes = list(size = pointSize))) +
theme(legend.title = element_text(size = textSize),
legend.text  = element_text(size = textSize),
legend.key.size = unit(spaceLegend, "lines"),
legend.box.margin = margin(-10,-10,-10,-10))
}
addSmallLegend(fig1A)
feat_dist_by_sample <- apply(met_df, 2, table) %>%
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(-1) %>%
rename("type" = 1, "sample" = 2) %>%
group_by(sample) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
arrange(total) %>%
mutate(diagnosis = hmp2_meta[sample, "diagnosis"]) %>%
mutate(colfacet = case_when(
diagnosis == "Control" ~ "non-IBD (n = 135)",
diagnosis == "CD" ~ "CD (n = 265)",
diagnosis == "UC" ~ "UC (n = 146)")) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown"))) %>%
mutate(colfacet = factor(colfacet, levels = c("non-IBD (n = 135)","CD (n = 265)","UC (n = 146)"))) %>%
mutate(sample = factor(sample, levels=unique(sample)))
fig1A <- ggplot(feat_dist_by_sample, aes(x=sample, y=value, fill=type)) +
geom_bar(stat="identity", width = 1)+scale_fill_manual(values=c("firebrick1","lightsteelblue1","grey50")) +
xlab("Samples")+ ylab("Features") +
facet_grid(cols=vars(colfacet), space="free", scales="free")  + theme_bw() +
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank(), legend.position="bottom",
axis.title.x = element_text(size=10), axis.title.y = element_text(size=10),
axis.text.y = element_text(size=8), strip.text.x = element_text(size = 10),
panel.background = element_rect(fill="white")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) + guides(fill=guide_legend(nrow=1)) + labs(fill="Feature category")
addSmallLegend(fig1A)
library(RColorBrewer)
View(met_df)
View(met_types)
View(met_types)
View(met_types)
fig1B_df <- met_types[,c(7,8,9)] %>%
rename("type" = 1, "prev" = 2, "abun" = 3)
View(fig1B_df)
fig1B <- ggplot(fig1B_df, aes(prev,abun)) + geom_bin2d() +
scale_fill_gradientn(colors = rev(col)) + xlab("Prevalence") +
ylab(expression(mean ~log[2]~(Abundance))) + theme_bw() +
facet_grid(cols=vars(type), scales = "free", space="free") +
theme(axis.title.x = element_text(size=10), axis.title.y = element_text(size=10),
axis.text.y = element_text(size=8), axis.text.x = element_text(size=8),
strip.text.x = element_text(size=10))
col = brewer.pal(n = 9, name = "RdYlBu"
)
fig1B <- ggplot(fig1B_df, aes(prev,abun)) + geom_bin2d() +
scale_fill_gradientn(colors = rev(col)) + xlab("Prevalence") +
ylab(expression(mean ~log[2]~(Abundance))) + theme_bw() +
facet_grid(cols=vars(type), scales = "free", space="free") +
theme(axis.title.x = element_text(size=10), axis.title.y = element_text(size=10),
axis.text.y = element_text(size=8), axis.text.x = element_text(size=8),
strip.text.x = element_text(size=10))
addSmallLegend(fig1B_df)
addSmallLegend(fig1B)
fig1B_df <- met_types[,c(7,8,9)] %>%
rename("type" = 1, "prev" = 2, "abun" = 3) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown")))
fig1B <- ggplot(fig1B_df, aes(prev,abun)) + geom_bin2d() +
scale_fill_gradientn(colors = rev(col)) + xlab("Prevalence") +
ylab(expression(mean ~log[2]~(Abundance))) + theme_bw() +
facet_grid(cols=vars(type), scales = "free", space="free") +
theme(axis.title.x = element_text(size=10), axis.title.y = element_text(size=10),
axis.text.y = element_text(size=8), axis.text.x = element_text(size=8),
strip.text.x = element_text(size=10))
addSmallLegend(fig1B)
met_types <- read_excel("data/Dataset_EV1.xlsx", sheet = 1) |> as.data.frame()
hmp2_abun <- read.csv("../../input/hmp2_intensities.csv")
hmp2_meta <- read.csv("../../input/hmp2_metadata.csv", row.names = 1)
met_types <- read_excel("data/Dataset_EV1.xlsx", sheet = 1) |> as.data.frame()
View(met_types)
CD_da_stats <- read.csv("../../output/all_CD_priority_scores.csv") %>%
column_to_rownames("Compound") %>%
select(c("effect_size","qvalue"))
View(CD_da_stats)
CD_stats <- read.csv("../../output/all_CD_priority_scores.csv")
UC_stats <- read.csv("../../output/all_UC_priority_scores.csv")
met_types <- met_types %>%
column_to_rownames("Compound")
View(met_types)
met_types <- met_types %>%
column_to_rownames("Feature")
View(CD_stats)
fig1C_df <- rbind(CD_prim_prioritized[,c("Compound","effect_size","qvalue","type","Status")] %>%
mutate(phenotype = "CD.dys"),UC_prim_prioritized[,c("Compound","effect_size","qvalue","type", "Status")] %>%
mutate(phenotype = "UC")) %>%
mutate(effect_size = ifelse(Status %like% "depleted", effect_size*-1, effect_size)) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown")))
CD_stats <- read.csv("../../output/all_CD_priority_scores.csv")
UC_stats <- read.csv("../../output/all_UC_priority_scores.csv")
fig1C_df <- rbind(CD_stats[,c("Compound","effect_size","qvalue","type","Status")] %>%
mutate(phenotype = "CD.dys"),UC_stats[,c("Compound","effect_size","qvalue","type", "Status")] %>%
mutate(phenotype = "UC")) %>%
mutate(effect_size = ifelse(Status %like% "depleted", effect_size*-1, effect_size)) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown")))
fig1C <- ggplot(fig1C_df, aes(as.numeric(effect_size), -log10(as.numeric(qvalue)))) + geom_bin2d() + theme_bw() +
facet_grid(cols=vars(type), rows=vars(phenotype), scales="free", space="free") + xlab("coefficient") + ylab(expression(-log[10]~(q-value))) +
scale_fill_gradientn(colors = rev(col)) +
theme(axis.title.x = element_text(size=10), axis.title.y =element_text(size=10),
axis.text.y = element_text(size=10), axis.text.x = element_text(size=10),
strip.text.x = element_text(size=10),strip.text.y = element_text(size=10))
View(fig1C_df)
fig1C <- ggplot(fig1C_df, aes(as.numeric(effect_size), -log10(as.numeric(qvalue)))) +
geom_bin2d() + theme_bw() +
facet_grid(cols=vars(type), rows=vars(phenotype), scales="free", space="free") +
xlab("coefficient") + ylab(expression(-log[10]~(q-value))) +
scale_fill_gradientn(colors = rev(col)) +
theme(axis.title.x = element_text(size=10), axis.title.y =element_text(size=10),
axis.text.y = element_text(size=10), axis.text.x = element_text(size=10),
strip.text.x = element_text(size=10),strip.text.y = element_text(size=10))
fig1C_df <- rbind(CD_stats[,c("Compound","effect_size","qvalue","type","Status")] %>%
mutate(phenotype = "CD.dys"),UC_stats[,c("Compound","effect_size","qvalue","type", "Status")] %>%
mutate(phenotype = "UC")) %>%
mutate(effect_size = ifelse(Status %like% "depleted", effect_size*-1, effect_size)) %>%
mutate(type = factor(type, levels = c("standard","putative mass-match","unknown"))) %>%
as.data.frame()
fig1C <- ggplot(fig1C_df, aes(as.numeric(effect_size), -log10(as.numeric(qvalue)))) +
geom_bin2d() + theme_bw() +
facet_grid(cols=vars(type), rows=vars(phenotype), scales="free", space="free") +
xlab("coefficient") + ylab(expression(-log[10]~(q-value))) +
scale_fill_gradientn(colors = rev(col)) +
theme(axis.title.x = element_text(size=10), axis.title.y =element_text(size=10),
axis.text.y = element_text(size=10), axis.text.x = element_text(size=10),
strip.text.x = element_text(size=10),strip.text.y = element_text(size=10))
col = brewer.pal(n = 9, name = "RdYlBu")
fig1C <- ggplot(fig1C_df, aes(as.numeric(effect_size), -log10(as.numeric(qvalue)))) +
geom_bin2d() + theme_bw() +
facet_grid(cols=vars(type), rows=vars(phenotype), scales="free", space="free") +
xlab("coefficient") + ylab(expression(-log[10]~(q-value))) +
scale_fill_gradientn(colors = rev(col)) +
theme(axis.title.x = element_text(size=10), axis.title.y =element_text(size=10),
axis.text.y = element_text(size=10), axis.text.x = element_text(size=10),
strip.text.x = element_text(size=10),strip.text.y = element_text(size=10))
addSmallLegend(fig1C)
addSmallLegend <- function(myPlot, pointSize = 1, textSize = 9, spaceLegend = 0.5) {
myPlot +
guides(shape = guide_legend(override.aes = list(size = pointSize)),
color = guide_legend(override.aes = list(size = pointSize))) +
theme(legend.title = element_text(size = textSize),
legend.text  = element_text(size = textSize),
legend.key.size = unit(spaceLegend, "lines"),
legend.box.margin = margin(-10,-10,-10,-10))
}
addSmallLegend(fig1C)
addSmallLegend(fig1C)
View(met_types)
abundance <- rowMeans(log2(hmp2_abun + 1), na.rm=TRUE)
head(abundance)
prevalence <- rowMeans(!is.na(hmp2_abun))
head(prevalence)
x <- hmp2_abun[3,]
x[is.na(x)]
View(hmp2_abun)
!is.na(x)
table(is.na(x))
35/511
35/511
head(prevalence)
